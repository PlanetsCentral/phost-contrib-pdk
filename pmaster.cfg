# Indicate that this configuration file pertains to the PMASTER program
% PMASTER

#########################################################################
#
# PMASTER configuration file.
# This file describes the characteristics of a new universe. Modify this
# file to suit your wishes, then copy it to the game directory of your
# new game (it should be empty). Run PMASTER on the game directory
# to master the new game:
#                           pmaster gamedir
#
# Note that any existing game files in this directory will be overwritten.
# If you name this file something other than 'pmaster.cfg', then you can
# invoke PMASTER with the specific name:
#                         pmaster -f custom.cfg gamedir
#
##########################################################################

#############################################################################
#                                                                           #
#                    C O M M O N    P A R A M E T E R S                     #
#                                                                           #
# These parameters should be modified to taste regardless of the scenario   #
# being used.                                                               #
#                                                                           #
#############################################################################

# This describes the general scenario to use. Accepted values are:
#
#     Classic     -- Each race gets a homeworld. You can either choose
#                    the homeworlds manually (by entering planet
#                    numbers) or set a radius for a circle on which
#                    homeworlds will be placed randomly.
#
#     Ashes       -- Ashes of the Old Empire. One race (the Old Empire)
#                    gets a homeworld and a nearby world with tons of
#                    Neutronium, and control of some neighboring planets
#                    which all have 0 Neutronium. The other races must
#                    invade and capture the Old Empire homeworld.
#
#     Disunited   -- Disunited Kingdoms. Each race starts with a homeworld
#                    and some number of planets near to the homeworld.
Scenario=Classic

# This array describes which races are playing. Set element N to Yes if
# race N will be playing (N is 1 to 11), otherwise set it to No.
#
#              1    2    3    4    5    6    7    8    9    10   11
RaceIsPlaying=Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes

# Set the initial passwords for each player. Passwords may be up to 10
# characters in length. To indicate that no password should be used, set
# the password to 'none'.
Password1=none
Password2=none
Password3=none
Password4=none
Password5=none
Password6=none
Password7=none
Password8=none
Password9=none
Password10=none
Password11=none

# Here is where you select the mineral composition of non-homeworld planets.
# The 8 elements of the PlanetSurfaceRanges array is interpreted as follows:
#                 Nmin, Tmin, Dmin, Mmin, Nmax, Tmax, Dmax, Mmax
# The actual amount of a mineral found on a planet's surface will then be
# randomly distributed between the 'min' and 'max' limits. For example, if
# Nmin=100 and Nmax=1000, then each planet's surface will have anywhere from
# 100 to 1000 KT of Neutronium.

# Uncomment one of the following to choose the richness of planets based upon
# the preset values from the MASTER 3.02 program. Or set your own values.

# Random rare
#PlanetSurfaceRanges=0, 0, 0, 0, 250, 50, 40, 25

# Random normal
#PlanetSurfaceRanges=0, 0, 0, 0, 250, 50, 40, 25

# Random rich
#PlanetSurfaceRanges=0, 0, 0, 0, 350, 150, 140, 125

# All the same, rare
#PlanetSurfaceRanges=250, 50, 40, 25, 250, 50, 40, 25

# All the same, normal
#PlanetSurfaceRanges=450, 150, 140, 125, 450, 150, 140, 125

# All the same, rich
#PlanetSurfaceRanges=850, 250, 240, 225, 850, 250, 240, 225

# Custom
#PlanetSurfaceRanges=Nmin, Tmin, Dmin, Mmin, Nmax, Tmax, Dmax, Mmax

# Density is also specified as Nmin, Tmin, Dmin, Mmin, Nmax, Tmax, Dmax, Mmax.
# Note that density must be in the range 10 through 100.

# Uncomment one of the following to choose densities based upon the preset
# values from the MASTER 3.02 program. Or set your own values.

# Random rare
#PlanetDensityRanges=40, 40, 40, 40, 90, 90, 90, 90

# Random normal
#PlanetDensityRanges=10, 10, 10, 10, 100, 100, 100, 100

# Random rich
#PlanetDensityRanges=10, 10, 10, 10, 100, 100, 100, 100

# All the same, rare
#PlanetDensityRanges=70, 70, 70, 70, 70, 70, 70, 70

# All the same, normal
#PlanetDensityRanges=50, 50, 50, 50, 50, 50, 50, 50

# All the same, rich
#PlanetDensityRanges=40, 40, 40, 40, 40, 40, 40, 40

# Custom
#PlanetDensityRanges=Nmin, Tmin, Dmin, Mmin, Nmax, Tmax, Dmax, Mmax

# Selecting the composition of minerals in the core of planets is a bit more
# complicated. You specify two sets of ranges, the "usual" range (min and max)
# and the "alternate" range (min and max). Then, you specify the frequency
# with which a given mineral will be chosen from the usual range. As before,
# the PlanetCoreRangesUsual and PlanetCoreRangesAlternate parameters are
# 8-element arrays in the form Nmin, Tmin, Dmin, Mmin, Nmax, Tmax, Dmax, Mmax.
#
# For example, for Neutronium you set the usual range to (min=100,
# max=1000) and the alternate range to (min=1000, max=10000). You set
# the usual range frequency to 80%. Then, on 80% of the planets, the
# amount of in-core Neutronium will be between 100 KT and 1000 KT. On the
# remaining 20% of the planets, the amount of in-core Neutronium will be
# between 1000 KT and 10000 KT.

# Uncomment one of the following to choose in-core richness based upon the
# preset values from the MASTER 3.02 program. Or set your own values.

# Random rare
#PlanetCoreRangesUsual    = 0, 0, 0, 0, 700, 500, 500, 200
#PlanetCoreRangesAlternate= 700, 500, 500, 200, 2000, 2000, 2000, 2000
#PlanetCoreUsualFrequency = 85, 85, 85, 85      # Percent chance of usual range

# Random normal
#PlanetCoreRangesUsual    = 0, 0, 0, 0, 700, 500, 500, 200
#PlanetCoreRangesAlternate= 700, 500, 500, 200, 12000, 12000, 12000, 12000
#PlanetCoreUsualFrequency = 75, 80, 85, 85     # Percent chance of usual range

# Random rich
#PlanetCoreRangesUsual    = 0, 0, 0, 0, 1400, 1000, 1000, 1000
#PlanetCoreRangesAlternate= 1400, 1000, 1000, 1000, 16000, 16000, 16000, 16000
#PlanetCoreUsualFrequency = 75, 80, 85, 85     # Percent chance of usual range

# All the same, rare
#PlanetCoreRangesUsual    = 500, 300, 300, 200, 500, 300, 300, 200
#PlanetCoreRangesAlternate= 0, 0, 0, 0, 0, 0, 0, 0
#PlanetCoreUsualFrequency = 100, 100, 100, 100 # Percent chance of usual range

# All the same, normal
#PlanetCoreRangesUsual    = 800, 600, 600, 400, 800, 600, 600, 400
#PlanetCoreRangesAlternate= 0, 0, 0, 0, 0, 0, 0, 0
#PlanetCoreUsualFrequency = 100, 100, 100, 100 # Percent chance of usual range

# All the same, rich
#PlanetCoreRangesUsual    = 1500, 900, 900, 900, 1500, 900, 900, 900
#PlanetCoreRangesAlternate= 0, 0, 0, 0, 0, 0, 0, 0
#PlanetCoreUsualFrequency = 100, 100, 100, 100 # Percent chance of usual range

# Now you select the characteristics of natives on planets. The
# NativesOnPlanetFrequency parameter indicates the percentage of planets that
# are to have natives. For example, setting it to 60 means that 60% of
# the planets will have natives (this is the default MASTER 3.02 setting).
NativesOnPlanetFrequency=60

# The NativeTypeFrequencies array allows you to control the relative
# frequency of the different kinds of natives (Bovinoid, Humanoid, etc.)
# Each element of this 9-element array must be a number from 0 to 100 that
# is only meaningful in comparison to the other numbers. Two elements from
# this array indicate the relative frequency of occurence of the corresponding
# native types. For example, if element 1 (Humanoids) is 10 and element 2
# (Bovinoids) is 20, then there will be twice as many planets with Bovinoids
# as Humanoids.
#
# Setting one item to 0 means that this native type will never appear.

# Default MASTER 3.02 behavior is equal probability for all native types
# except for Humanoids and Siliconoids which are half as likely as the others.
# The native types are:
#                 1 -- Humanoid       6 -- Insectoid
#                 2 -- Bovinoid       7 -- Amphibian
#                 3 -- Reptilian      8 -- Ghipsoldal
#                 4 -- Avian          9 -- Siliconoid
#                 5 -- Amorphous
#
#                      1   2   3   4   5   6   7   8   9
NativeTypeFrequencies=25, 50, 50, 50, 50, 50, 50, 50, 25

# The NativeGovFrequencies array has the same format as NativeTypeFrequencies
# except that it applies to government types.

# Default MASTER 3.02 behavior is equal probability for all native governments
# except for Anarchy and Unity which are half as likely as the others.
# The government types are:
#                 1 -- Anarchy        6 -- Monarchy
#                 2 -- Pre-tribal     7 -- Representative
#                 3 -- Early Tribal   8 -- Participatory
#                 4 -- Tribal         9 -- Unity
#                 5 -- Feudal
#
#                     1   2   3   4   5   6   7   8   9
NativeGovFrequencies=25, 50, 50, 50, 50, 50, 50, 50, 25

# The NativeClansRange has two elements, min and max, which indicate the
# minimum number and maximum number of native clans for planets that have
# natives. The actual number of clans is chosen uniformly from this range.
# Note that these are clans, the actual native population is 100 times the
# number of clans. The maximum value for the number of clans is 160000.

# Default MASTER 3.02 behavior (approximate)
NativeClansRange=25, 90000


#############################################################################
#                                                                           #
#                           S C E N A R I O S                               #
#                                                                           #
# Uncomment and modify the parameters for the particular scenario that you  #
# have chosen.                                                              #
#                                                                           #
#############################################################################

###########                                                        ##########
###########             C L A S S I C    S C E N A R I O           ##########
###########                                                        ##########

# There are two choices in determining homeworlds. Either enter the planet
# numbers of the homeworlds in the Homeworlds array and set
# HomeworldsRadius to 0, or set the HomeworldsRadius to a non-zero number,
# in which case the Homeworlds array is ignored. In the latter case, the
# radius describes a circle, centered on (2000,2000), on which the homeworlds
# will be placed. The homeworlds will be placed on equidistant points on
# the circumference of this circle, in random order.
#
# If you want to know APPROXIMATELY how far apart each homeworld will be from
# its neighbors, use the following formula:
#
#                         d = 2 * R * sin(pi/N)
# where:
#       d is the approximate distance from one homeworld to its neighbors
#       R is the HomeworldsRadius parameter
#       N is the number of active races in the game
#       sin() is the sine function (its argument is in radians, not degrees)
#       pi is 3.14159

# Set the homeworlds manually. Change the planet numbers to your own choice.
# Planet numbers must be in the range 1 through 500.
#Homeworlds=10, 135, 222, 486, 17, 231, 387, 401, 75, 115, 199
#HomeworldsRadius=0

# Place the homeworlds randomly on a circle centered on (2000,2000)
#Homeworlds=1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
#HomeworldsRadius=500

# This array sets the initial number of clans on each homeworld. Each race
# can have their own starting clans setting. Default values from MASTER 3.02
# are provided. Note, too, that these are clans that are being specified,
# the actual population is 100 times the number of clans.

# Normal homeworld population
#HomeworldClans=2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500

# High homeworld population
#HomeworldClans=10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000

# Very high homeworld population
#HomeworldClans=30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000

# Set this parameter to True if the Crystal homeworld is to have a temperature
# of 100 rather than 50, as for the other homeworlds.
#DesertCrystalHomeworld=True

# This array indicates the starting amount of money on each homeworld. Default
# values from MASTER 3.02 are provided.

# Low starting money
#HomeworldCash=1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000

# Normal starting money
#HomeworldCash=3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700

# High starting money
#HomeworldCash=5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000

# Very high starting money
#HomeworldCash=15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000

# Set each element of this array to Yes if the corresponding race is to
# have a starbase at its homeworld, otherwise set it to No.
#HomeworldBase=Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes

# These arrays indicate the amount of minerals to place in the core of each
# homeworld, and on the surface. Each array is indexed by race. Default
# MASTER 3.02 settings are provided.

# Normal homeworld richness
#HomeworldCoreN=3000, 3000, 3000, 3000, 3000, 3000, 3000, 3000, 3000, 3000, 3000
#HomeworldCoreT=1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000
#HomeworldCoreD=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldCoreM=650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650
#HomeworldSurfaceN=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldSurfaceT=300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300
#HomeworldSurfaceD=350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350
#HomeworldSurfaceM=150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150

# Homeworlds extra rich
#HomeworldCoreN=4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000, 4000
#HomeworldCoreT=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldCoreD=3500, 3500, 3500, 3500, 3500, 3500, 3500, 3500, 3500, 3500, 3500
#HomeworldCoreM=1650, 1650, 1650, 1650, 1650, 1650, 1650, 1650, 1650, 1650, 1650
#HomeworldSurfaceN=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldSurfaceT=300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300
#HomeworldSurfaceD=350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350
#HomeworldSurfaceM=150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150

# This array indicates the starting engine tech for each one of the homeworlds.
# Each element must be in the range 1 through 10.
#StartingEngineTech=7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7

# Set each element of this array to Yes if the corresponding race is to get
# two free ships at the start of the game.
#TwoFreeShips=Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes

###########                                                        ##########
###########    A S H E S    O F    T H E    O L D    E M P I R E   ##########
###########                                                        ##########
###########                  S C E N A R I O                       ##########
###########                                                        ##########

# OldEmpireRace is the race number (1 through 11) indicating the race
# that is to play the Old Empire.
OldEmpireRace=8

# OldEmpirePlanets indicates the number of planets that the Old Empire
# controls at the beginning of the game, not including the homeworld.
# It may be as few as 0 or as many as 489.
OldEmpirePlanets=200

# Given the nature of the Ashes of the Old Empire scenario, it makes the
# most sense to choose the homeworlds manually. Change the planet
# numbers to your own choice. Planet numbers must be in the range 1
# through 500. NOTE: The actual homeworld assigned to a player may be
# different if the planet has already been claimed as belonging to the
# Old Empire. PMASTER will find the closest unowned planet to the planet
# that you specify and use this as the homeworld.
#Homeworlds=10, 135, 222, 486, 17, 231, 387, 401, 75, 115, 199
#HomeworldsRadius=0    # This must be set to 0.

# This array sets the initial number of clans on each homeworld. In the
# Ashes of the Old Empire scenario, MASTER 3.02 gives the Old Empire
# 4 times as many clans as the other races but you can roll your own. Each race
# can have their own starting clans setting. Default values from MASTER 3.02
# are provided. Note, too, that these are clans that are being specified,
# the actual population is 100 times the number of clans.

# Normal homeworld population -- race 8 is Old Empire
#HomeworldClans=2500, 2500, 2500, 2500, 2500, 2500, 2500, 10000, 2500, 2500, 2500

# High homeworld population -- race 8 is Old Empire
#HomeworldClans=10000, 10000, 10000, 10000, 10000, 10000, 10000, 40000, 10000, 10000, 10000

# Very high homeworld population -- race 8 is Old Empire
# NOTE: MASTER 3.02 gives the Old Empire 120000 clans but the limit is
# 100000.
#HomeworldClans=30000, 30000, 30000, 30000, 30000, 30000, 30000, 100000, 30000, 30000, 30000

# Set this parameter to True if the Crystal homeworld is to have a temperature
# of 100 rather than 50, as for the other homeworlds.
#DesertCrystalHomeworld=True

# This array indicates the starting amount of money on each homeworld. Default
# values from MASTER 3.02 are provided.

# Low starting money
#HomeworldCash=1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000

# Normal starting money
#HomeworldCash=3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700

# High starting money
#HomeworldCash=5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000

# Very high starting money
#HomeworldCash=15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000

# Set each element of this array to Yes if the corresponding race is to
# have a starbase at its homeworld, otherwise set it to No.
#HomeworldBase=Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes

# These arrays indicate the amount of minerals to place in the core of each
# homeworld, and on the surface. Each array is indexed by race. Default
# MASTER 3.02 settings are provided. In the Ashes of the Old Empire scenario,
# all players get 23000 KT of Neutronium on the homeworld with normal
# homeworld richness, and 50000 KT of Neutronium when the homeworlds are
# extra rich.

# Normal homeworld richness -- race 8 is Old Empire
#HomeworldCoreN=23000, 23000, 23000, 23000, 23000, 23000, 23000, 23000, 23000, 23000, 23000
#HomeworldCoreT=1000, 1000, 1000, 1000, 1000, 1000, 1000, 2000, 1000, 1000, 1000
#HomeworldCoreD=2000, 2000, 2000, 2000, 2000, 2000, 2000, 4000, 2000, 2000, 2000
#HomeworldCoreM=650, 650, 650, 650, 650, 650, 650, 1950, 650, 650, 650
#HomeworldSurfaceN=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldSurfaceT=300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300
#HomeworldSurfaceD=350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350
#HomeworldSurfaceM=150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150

# Homeworlds extra rich -- race 8 is Old Empire
#HomeworldCoreN=50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000
#HomeworldCoreT=2000, 2000, 2000, 2000, 2000, 2000, 2000, 4000, 2000, 2000, 2000
#HomeworldCoreD=3500, 3500, 3500, 3500, 3500, 3500, 3500, 7000, 3500, 3500, 3500
#HomeworldCoreM=1650, 1650, 1650, 1650, 1650, 1650, 1650, 4950, 1650, 1650, 1650
#HomeworldSurfaceN=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldSurfaceT=300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300
#HomeworldSurfaceD=350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350
#HomeworldSurfaceM=150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150

# This array indicates the starting engine tech for each one of the homeworlds.
# Each element must be in the range 1 through 10.
#StartingEngineTech=7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7

# Set each element of this array to Yes if the corresponding race is to get
# two free ships at the start of the game.
#TwoFreeShips=Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes

###########                                                         ##########
########### D I S U N I T E D    K I N G D O M S    S C E N A R I O ##########
###########                                                         ##########

# Set the number of planets that each race will start with. Configurable for
# each race.
OwnedPlanets=10, 10, 10, 10, 10, 10, 10, 10, 10, 10, 10

# Set this to True if you want each race to start out with the exact same
# set of owned planets. This makes the most sense if every member of
# OwnedPlanets is the same (i.e., all races start out with the same number
# of planets). If AllOwnedPlanetsTheSame is True, all the races will have
# identical starting conditions except, of course, for their locations.
AllOwnedPlanetsTheSame=True

# There are two choices in determining homeworlds. Either enter the planet
# numbers of the homeworlds in the Homeworlds array and set
# HomeworldsRadius to 0, or set the HomeworldsRadius to a non-zero number,
# in which case the Homeworlds array is ignored. In the latter case, the
# radius describes a circle, centered on (2000,2000), on which the homeworlds
# will be placed. The homeworlds will be placed on equidistant points on
# the circumference of this circle, in random order.
#
# If you want to know APPROXIMATELY how far apart each homeworld will be from
# its neighbors, use the following formula:
#
#                         d = 2 * R * sin(pi/N)
# where:
#       d is the approximate distance from one homeworld to its neighbors
#       R is the HomeworldsRadius parameter
#       N is the number of active races in the game
#       sin() is the sine function (its argument is in radians, not degrees)
#       pi is 3.14159

# Set the homeworlds manually. Change the planet numbers to your own choice.
# Planet numbers must be in the range 1 through 500.
#Homeworlds=10, 135, 222, 486, 17, 231, 387, 401, 75, 115, 199
#HomeworldsRadius=0

# Place the homeworlds randomly on a circle centered on (2000,2000)
#Homeworlds=1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1
#HomeworldsRadius=500

# This array sets the initial number of clans on each homeworld. Each race
# can have their own starting clans setting. Default values from MASTER 3.02
# are provided. Note, too, that these are clans that are being specified,
# the actual population is 100 times the number of clans.

# Normal homeworld population
#HomeworldClans=2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500, 2500

# High homeworld population
#HomeworldClans=10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000, 10000

# Very high homeworld population
#HomeworldClans=30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000, 30000

# Set this parameter to True if the Crystal homeworld is to have a temperature
# of 100 rather than 50, as for the other homeworlds.
#DesertCrystalHomeworld=True

# This array indicates the starting amount of money on each homeworld. Default
# values from MASTER 3.02 are provided.

# Low starting money
#HomeworldCash=1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000

# Normal starting money
#HomeworldCash=3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700, 3700

# High starting money
#HomeworldCash=5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000, 5000

# Very high starting money
#HomeworldCash=15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000, 15000

# Set each element of this array to Yes if the corresponding race is to
# have a starbase at its homeworld, otherwise set it to No.
#HomeworldBase=Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes

# These arrays indicate the amount of minerals to place in the core of each
# homeworld, and on the surface. Each array is indexed by race. Default
# MASTER 3.02 settings are provided.

# Normal homeworld richness
#HomeworldCoreN=23000, 23000, 23000, 23000, 23000, 23000, 23000, 23000, 23000, 23000, 23000
#HomeworldCoreT=1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000
#HomeworldCoreD=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldCoreM=650, 650, 650, 650, 650, 650, 650, 650, 650, 650, 650
#HomeworldSurfaceN=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldSurfaceT=300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300
#HomeworldSurfaceD=350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350
#HomeworldSurfaceM=150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150

# Homeworlds extra rich
#HomeworldCoreN=50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000
#HomeworldCoreT=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldCoreD=3500, 3500, 3500, 3500, 3500, 3500, 3500, 3500, 3500, 3500, 3500
#HomeworldCoreM=1650, 1650, 1650, 1650, 1650, 1650, 1650, 1650, 1650, 1650, 1650
#HomeworldSurfaceN=2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000, 2000
#HomeworldSurfaceT=300, 300, 300, 300, 300, 300, 300, 300, 300, 300, 300
#HomeworldSurfaceD=350, 350, 350, 350, 350, 350, 350, 350, 350, 350, 350
#HomeworldSurfaceM=150, 150, 150, 150, 150, 150, 150, 150, 150, 150, 150

# This array indicates the starting engine tech for each one of the homeworlds.
# Each element must be in the range 1 through 10.
#StartingEngineTech=7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7

# Set each element of this array to Yes if the corresponding race is to get
# two free ships at the start of the game.
#TwoFreeShips=Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes, Yes

